xlab="Продолжительность тушения пожара (мин)",
ylab="Причиненный ущерб ($ США)")
fire.loss.2 <- fire_data[5]
fire.loss.2[, 2] <- mapply(function(start, end) difftime(strptime(end, format="%m/%d/%Y %I:%M:%S %p"), strptime(start, format="%m/%d/%Y %I:%M:%S %p"), units="mins"), fire_data[,3], fire_data[,4])
colnames(fire.loss.2) <- c("Loss", "Time")
plot(fire.loss.2[, 2], fire.loss.2[, 1],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от продолжительности его тушения в Сан-Франциско",
xlab="Продолжительность тушения пожара (мин)",
ylab="Причиненный ущерб ($ США)")
fire_floor_data <- read.csv("fire.floors.csv")
fire.floor.to.time <- fire_floor_data[, 7]
fire.floor.to.time[, 2] <- mapply(function(start, end) difftime(strptime(end, format="%m/%d/%Y %I:%M:%S %p"), strptime(start, format="%m/%d/%Y %I:%M:%S %p"), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
plot(fire.floor.to.time[, 2], fire.floor.to.time[, 1],
col="#FF3D00", type="p",
pch=16,
main="Зависимость продолжительности тушения пожара от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Продолжительность тушения пожара (мин)")
fire_floor_data <- read.csv("fire.floors.csv")
fire.floor.to.time <- fire_floor_data[, 7]
fire.floor.to.time[, 2] <- mapply(function(start, end) difftime(strptime(end, format="%m/%d/%Y %I:%M:%S %p"), strptime(start, format="%m/%d/%Y %I:%M:%S %p"), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
options(scipen=5)
fire.floor.to.time[,2] <- mapply(function(start, end) difftime(strptime(end, format="%m/%d/%Y %I:%M:%S %p"), strptime(start, format="%m/%d/%Y %I:%M:%S %p"), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
fire_data <- read.csv("Fire_incidents.csv")
fire.time.to.loss <- fire_data[5]
fire.time.to.loss[,2] <- mapply(function(start, end) difftime(strptime(end, format="%m/%d/%Y %I:%M:%S %p"), strptime(start, format="%m/%d/%Y %I:%M:%S %p"), units="mins"), fire_data[,3], fire_data[,4])
fire.floor.to.time <- fire_floor_data[7]
fire.floor.to.time[,2] <- mapply(function(start, end) difftime(strptime(end, format="%m/%d/%Y %I:%M:%S %p"), strptime(start, format="%m/%d/%Y %I:%M:%S %p"), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
plot(fire.floor.to.time[,2], fire.floor.to.time[,1],
col="#FF3D00", type="p",
pch=16,
main="Зависимость продолжительности тушения пожара от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Продолжительность тушения пожара (мин)")
summary(fire.floor.to.time[,2])
plot(fire.floor.to.time[,1], fire.floor.to.time[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость продолжительности тушения пожара от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Продолжительность тушения пожара (мин)")
time.format <- "%m/%d/%Y %I:%M:%S %p"
time.format[1]
time.format
time.format[1]
fire.reaction.to.time <- mapply(function(start, end) difftime(strptime(end, format=time.format), strptime(start, format=time.format), units="mins"), fire_floor_data[,2], fire_floor_data[,3])
fire.reaction.to.time[,2] <- mapply(function(start, end) difftime(strptime(end, format=time.format), strptime(start, format=time.format), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
plot(fire.reaction.to.time[,1], fire.reaction.to.time[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость продолжительности тушения пожара от времени реагирования пожарных в Сан-Франциско",
xlab="Время реагирования (мин)",
ylab="Продолжительность тушения пожара (мин)")
fire.reaction.to.time <- data.frame()
fire.reaction.to.time <- mapply(function(start, end) difftime(strptime(end, format=time.format), strptime(start, format=time.format), units="mins"), fire_floor_data[,2], fire_floor_data[,3])
fire.reaction.to.time[,2] <- mapply(function(start, end) difftime(strptime(end, format=time.format), strptime(start, format=time.format), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
data.frame(fire.reaction.to.time)
fire.reaction.to.time[,2] <- mapply(function(start, end) difftime(strptime(end, format=time.format), strptime(start, format=time.format), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
fire.reaction.to.time <- data.frame(fire.reaction.to.time)
fire.reaction.to.time[,2] <- mapply(function(start, end) difftime(strptime(end, format=time.format), strptime(start, format=time.format), units="mins"), fire_floor_data[,3], fire_floor_data[,4])
plot(fire.reaction.to.time[,1], fire.reaction.to.time[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость продолжительности тушения пожара от времени реагирования пожарных в Сан-Франциско",
xlab="Время реагирования (мин)",
ylab="Продолжительность тушения пожара (мин)")
summary(fire.reaction.to.time)
na.omit(fire.reaction.to.time)
summary(fire.reaction.to.time)
fire.reaction.to.time <-na.omit(fire.reaction.to.time)
summary(fire.reaction.to.time)
plot(fire.reaction.to.time[,1], fire.reaction.to.time[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость продолжительности тушения пожара от времени реагирования пожарных в Сан-Франциско",
xlab="Время реагирования (мин)",
ylab="Продолжительность тушения пожара (мин)")
fire.floor.to.loss <- fire_floor_data[7]
fire.floor.to.loss[,2] <- fire_floor_data[6]
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
colnames(fire.time.to.loss) <- c("Floor", "Loss")
colnames(fire.floor.to.loss) <- c("Floor", "Loss")
fire.floor.to.loss <- subset(fire.floor.to.loss, Floor < 25)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
fire.floor.to.loss <- subset(fire.floor.to.loss, Floor < 25, Loss < 100000)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
fire.floor.to.loss <- subset(fire.floor.to.loss, Floor < 25, Loss < 100000)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
7]
fire.floor.to.loss[,2] <- fire_floor_data[6]
fire.floor.to.loss <- fire_floor_data[7]
remove(fire.floor.to.loss)
fire.floor.to.loss <- fire_floor_data[7]
fire.floor.to.loss[,2] <- fire_floor_data[6]
colnames(fire.floor.to.loss) <- c("Floor", "Loss")
fire.floor.to.loss <- subset(fire.floor.to.loss, Floor < 25, Loss < 100000)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
fire.floor.to.loss
fire.floor.to.loss <- na.omit(fire.floor.to.loss)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
na.omit(fire.floor.to.loss)
fire.floor.to.loss
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
fire.floor.to.loss
remove(fire.floor.to.loss)
fire.floor.to.loss <- fire_floor_data[7]
fire.floor.to.loss[,2] <- fire_floor_data[6]
fire.floor.to.loss
na.omit(fire.floor.to.loss)
fire.floor.to.loss
fire.floor.to.loss <- na.omit(fire.floor.to.loss)
fire.floor.to.loss
fire.floor.to.loss <- subset(fire.floor.to.loss, Floor < 25, Loss < 100000)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
colnames(fire.floor.to.loss) <- c("Floor", "Loss")
fire.floor.to.loss <- subset(fire.floor.to.loss, Floor < 25, Loss < 100000)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
na.fail(fire.floor.to.loss)
fire.floor.to.loss <- subset(fire.floor.to.loss, Loss < 100000)
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
plot(fire.reaction.to.time[,1], fire.reaction.to.time[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость продолжительности тушения пожара от времени реагирования пожарных в Сан-Франциско",
xlab="Время реагирования (мин)",
ylab="Продолжительность тушения пожара (мин)")
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром, от этажа его возгорания в Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
plot(fire.floor.to.loss[,1], fire.floor.to.loss[,2],
col="#FF3D00", type="p",
pch=16,
main="Зависимость ущерба, причиненного пожаром,\nот этажа его возгорания\nв Сан-Франциско",
xlab="Этаж возгорания",
ylab="Причиненный ущерб ($ США)")
sample.nrom <- rnorm(1000)
sample.nrom <- rnorm(1000, 19, 3)
hist(sample.nrom, breaks = "Sturges")
col = "#5AA0D6")
hist(sample.nrom,
breaks = "Sturges",
col = "#5AA0D6")
sample.norm <- rnorm(1000, 19, 3)
hist(sample.norm,
summary(sample.norm)
hist(sample.norm,
breaks = "Sturges",
col = "#5AA0D6")
summary(sample.norm)
hist(sample.norm,
breaks = "Sturges",
col = "#5AA0D6")
summary(sample.norm)
var(sample.norm)
sample.unif <- runif(n = 1000, max = 5, min = 17)
hist(sample.unif,
breaks = "Sturges",
col = "#EF8B6B")
summary(sample.norm)
var(sample.norm)
hist(sample.unif,
col = "#EF8B6B")
sample.unif <- runif(n = 1000, max = 5, min = 17)
sample.unif <- runif(n = 1000, max = 5, min = 17)
sample.unif <- runif(n = 12, max = 5, min = 17)
sample.unif
sample.unif <- runif(n = 12, max = 5, min = 17)
sample.unif
sample.unif <- runif(n = 1000, max = 5, min = 17)
sample.unif <- runif(1000, min = 5, max = 17)
hist(sample.unif,
breaks = "Sturges",
col = "#111D4A",
main = "Равномерное распределение")
sd(sample.unif)
var(sample.unif)
boxplot(sample.unif, col = "#111D4A")
hist(sample.unif,
breaks = "Sturges",
col = "#FFF8F0",
main = "Равномерное распределение")
boxplot(sample.unif, col = "#FFF8F0")
sample.exp <- rexp(1000, 4)
summary(sample.exp)
var(sample.exp)
rate(sample.exp)
hist(sample.exp,
breaks = "Sturges",
col = "#F6CA83",
main = "Экспоненциальное распределение")
boxplot(sample.exp, col = "#F6CA83")
sample.t <- rt(1000, 998)
hist(sample.t,
breaks = "Sturges",
col = "#283F3B",
main = "Распределение Стьюдента")
summary(sample.t)
var(sample.t)
sample.t <- rt(1000, 3)
hist(sample.t,
breaks = "Sturges",
col = "#283F3B",
main = "Распределение Стьюдента")
summary(sample.t)
var(sample.t)
hist(sample.t,
breaks = "Sturges",
col = "#283F3B",
main = "Распределение Стьюдента")
boxplot(sample.t, col = "#111D4A")
boxplot(sample.t, col = "#283F3B")
hist(sample.t,
breaks = "Sturges",
col = "#283F3B",
main = "Распределение Стьюдента")
sample.chisq <- rchisq(1000, 7)
hist(sample.chisq,
breaks = "Sturges",
col = "#9CAFB7",
main = "Распределение Хи-квадрат")
hist(sample.norm,
breaks = "Sturges",
col = "#F6CA83",
main = "Нормальное распределение")
hist(sample.chisq,
breaks = "Sturges",
col = "#FFCF99",
main = "Распределение Хи-квадрат")
boxplot(sample.chisq, col = "#111D4A")
hist(sample.t,
breaks = "Sturges",
col = "#9CAFB7",
main = "Распределение Стьюдента")
boxplot(sample.t, col = "#9CAFB7")
sample.chisq <- rchisq(1000, 7)
summary(sample.chisq)
var(sample.chisq)
hist(sample.chisq,
breaks = "Sturges",
col = "#FFCF99",
main = "Распределение Хи-квадрат")
boxplot(sample.chisq, col = "#FFCF99")
data <- read.table("kc_house_data.csv", header=TRUE, sep=",")
View(data)
View(data)
View(data)
price <- data[,3]
na.fail(data)
is.na(data)
sqft_living <-data[,6]
plot(sqft_living, price, col="blue", type="p")
plot(sqft_living, price, col="blue", type="p", pch=16)
options(scipen=5)
plot(sqft_living, price, col="blue", type="p", pch=16)
data <- subset(read.table("kc_house_data.csv", header=TRUE, sep=","), price < 2000000, sqft_living < 8000)
price <- data[,3]
sqft_living <-data[,6]
plot(sqft_living, price, col="blue", type="p", pch=16)
data <- read.table("movie_metadata.csv", header=TRUE, sep=",")
remove(data)
data <- read.table("movie_metadata.csv", header=TRUE, sep=",")
data <- read.csv("movie_metadata.csv", header=TRUE, sep=",")
data <- scan("movie_metadata.csv", header=TRUE, sep=",")
data <- read.table("movie_metadata.csv", header=TRUE, sep=",")
data <- read.table("movie_metadata.csv", header=TRUE, sep=",", fill=TRUE)
data <- read.table("movie_metadata.csv", quote="", header=TRUE, sep=",", fill=TRUE)
na.omit(data)
data <- na.omit(data)
remove(price, sqft_living)
budget <- data["budget"]
View(budget)
imdb_score <-data["imdb_score"]
plot(budget, imdb_score, col="blue", type="p", pch=16)
data <- read.table("movie_metadata.csv", quote="", header=TRUE, sep=",", fill=TRUE)
?omit
data <- na.omit(data)
budget <- as.numeric(data["budget"])
imdb_score <-as.character(data["imdb_score"])
imdb_score <-data["imdb_score"]
budget <- as.character(data["budget"])
budget <- as.numeric(as.character(data["budget"]))
budget <- as.data.frame.integer (data["budget"])
View(imdb_score)
budget <- as.data.frame.integer(data["budget"])
budget <- as.vector(data["budget"])
budget <- as.integer(data["budget"])
budget <- as.list.numeric_version(data["budget"])
budget <- as.list(data["budget"])
budget <- data["budget"]
View(budget)
imdb_score <- as.character(data["imdb_score"])
View(budget)
stringsAsFactors=FALSE)
data <- read.table("movie_metadata.csv",
quote="",
header=TRUE,
sep=",",
fill=TRUE,
stringsAsFactors=FALSE)
data <- na.omit(data)
budget <- data["budget"]
budget <- as.numeric(data["budget"])
imdb_score <- data["imdb_score"]
budget <- as.numeric(as.character(data["budget"]))
budget <- as.character(data["budget"])
budget <- data["budget"]
View(budget)
budget <- as.integer(data["budget"])
budget <- data["budget"]
lapply(budget, as.numeric)
budget <- lapply(data["budget"], as.numeric)
budget <- lapply(data["budget"], as.numeric)[1]
budget <- lapply(data["budget"], as.numeric)[1,]
data <- read.table("movie_metadata.csv",
quote="",
header=TRUE,
sep=",",
fill=TRUE,
stringsAsFactors=FALSE)
data <- na.omit(data)
imdb_score <- data["imdb_score"]
budget <- data["budget"]
budget <- as.numeric(budget)
typeof(budget)
typeof(imdb_score)
typeof(data)
data <- as.data.frame(na.omit(data))
View(data)
typeof(data)
budget <- as.factor(budget)
a.csv",
quote="",
header=TRUE,
sep=",")
data <- scan("movie_metadata.csv",
quote="",
header=TRUE,
sep=",")
data <- scan("movie_metadata.csv",
quote="",
sep=",")
data <- read.table("movie_metadata.csv",
quote="",
header=TRUE,
sep=",",
fill=TRUE,
stringsAsFactors=FALSE)
budget <- data[, 26]
budget <- data[, 23]
imdb_score <- data[,26]
budget <- as.numeric(budget)
data <- read.table("movie_metadata.csv",
quote="",
header=TRUE,
sep=",",
fill=TRUE,
stringsAsFactors=FALSE)
data <- na.omit(data)
options(scipen=5)
budget <- data[,23]
budget <- as.numeric(budget)
imdb_score <- data[,26]
plot(budget, imdb_score, col="blue", type="p", pch=16)
budget <- mapply(function(b) b/1000000, budget)
plot(budget, imdb_score, col="blue", type="p", pch=16)
summary(imdb_score)
imdb_score <- data[,26]
summary(imdb_score)
data <- na.omit(subset(data, budget < 6000000000, imdb_score < 10))
budget <- data[,23]
budget <- as.numeric(budget)
budget <- mapply(function(b) b/1000000, budget)
imdb_score <- data[,26]
budget <- data[,23]
data <- read.table("movie_metadata.csv",
quote="",
header=TRUE,
sep=",",
fill=TRUE,
stringsAsFactors=FALSE)
data <- na.omit(subset(data, budget < 6000000000, imdb_score < 10))
data <- read.table("kc_house_data.csv",
header=TRUE,
sep=",")
price <- data[,3]
sqft_living <- data[,6]
remove(budget, imdb_score)
plot(price, sqft_living, col="blue", type="p", pch=16)
plot(sqft_living, price, col="blue", type="p", pch=16)
"blue", type="p", pch=16,
xlab="Жилая площадь",
ylab="Цена на квартиру")
plot(sqft_living, price, col="blue", type="p", pch=16,
xlab="Жилая площадь",
ylab="Цена на квартиру")
regression <- lm(formula=price ~ sqft_living)
summary(regression)
regression
abline(regression, col="red", lwd="3", add=TRUE)
abline(regression, col="red", lwd="3")
abline(regression, col="red", lwd="3")
plot(sqft_living, price, col="blue", type="p", pch=16,
xlab="Жилая площадь",
ylab="Цена на квартиру")
plot(sqft_living, price, col="blue", type="p", pch=16,
xlab="Жилая площадь",
ylab="Цена на квартиру")
abline(regression, col="red", lwd="3")
summary(regression)
sqft.living <- data[,6]
plot(sqft.living, price, col="blue", type="p", pch=16,
plot(sqft.living, price, col="blue", type="p", pch=16,
xlab="Жилая площадь",
ylab="Цена на квартиру")
regression <- lm(formula=price ~ sqft_living)
regression.fixed <- lm(formula=price ~ sqft_living - 1)
abline(regression.fixed, col="black", lwd="3")
plot(sqft.living, price, col="blue", type="p",
xlab="Жилая площадь",
ylab="Цена на квартиру")
abline(regression, col="red", lwd="3")
abline(regression.fixed, col="black", lwd="3")
plot(sqft.living, price, col="green", type="p",
xlab="Жилая площадь",
ylab="Цена на квартиру")
", type="p",
xlab="Жилая площадь",
ylab="Цена на квартиру")
plot(sqft.living, price, col="black", type="p",
xlab="Жилая площадь",
ylab="Цена на квартиру")
abline(regression, col="red", lwd="3")
abline(regression.fixed, col="yellow", lwd="3")
abline(regression, col="#3C0000", lwd="3")
abline(regression.fixed, col="#D69F7E", lwd="3")
plot(sqft.living, price, col="#2C666E", type="p",
xlab="Жилая площадь",
ylab="Цена на квартиру")
abline(regression, col="#3C0000", lwd="3")
abline(regression.fixed, col="#D69F7E", lwd="3")
data <- na.omit(subset(data, sqft_living < 7000))
price <- data[,3]
sqft.living <- data[,6]
plot(sqft.living, price, col="#2C666E", type="p",
xlab="Жилая площадь",
ylab="Цена на квартиру")
regression <- lm(formula=price ~ sqft_living)
regression.fixed <- lm(formula=price ~ sqft_living - 1)
abline(regression, col="#3C0000", lwd="3")
abline(regression.fixed, col="#D69F7E", lwd="3")
summary(regression.fixed)
regression
regression.fixed
summary(regression)
summary(regression.fixed)
View(data)
remove(sqft_living, sample.chisq, sample.exp, sample.t, sample.unif)
