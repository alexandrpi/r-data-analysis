data.diabet$Insulin > 0 &
data.diabet$BMI > 0 &]
data.diabet <- data.diabet[data.diabet$Glucose > 0 &
data.diabet$BloodPressure > 0 &
data.diabet$SkinThickness > 0 &
data.diabet$Insulin > 0 &
data.diabet$BMI > 0]
data.diabet <- data.diabet[data.diabet$Glucose > 0 &
data.diabet$BloodPressure > 0 &
data.diabet$SkinThickness > 0 &
data.diabet$Insulin > 0 &
data.diabet$BMI > 0,]
data.size <- length(data.diabet[, 1])
train.size <- 317
test.size <- data.size - train.size
round(prop.table(table(data.diabet$Outcome)), digits = 2)
train.indices <- sample(1:data.size, train.size)
test.indices <- setdiff(1:data.size, train.indices)
diabet.train <- data.diabet[train.indices,]
round(prop.table(table(diabet.train$Outcome)), digits = 2)
diabet.train.labels <- diabet.train[, 9]
diabet.train <- diabet.train[, -9]
diabet.test <- data.diabet[test.indices,]
diabet.test.labels <- diabet.test[, 9]
diabet.test <- diabet.test[, -9]
library("class")
diabet.test.prediction <- knn(train = diabet.train,
test = diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
library("gmodels")
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
cor(data.diabet[, c(2, 5)])
round(prop.table(table(data.diabet$Outcome)), digits = 2)
round(prop.table(table(diabet.train$Outcome)), digits = 2)
diabet.train <- data.diabet[train.indices,]
round(prop.table(table(data.diabet$Outcome)), digits = 2)
round(prop.table(table(diabet.train$Outcome)), digits = 2)
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
my.diabet.test <- as.data.frame()
my.diabet.test <- as.data.frame(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(as.numeric(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(c(as.numeric(2, 76, 70, 23, 67, 34.7, 0.23, 22)))
my.diabet.test <- as.numeric(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test <- c(2, 76, 70, 23, 67, 34.7, 0.23, 22)
as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.numeric(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.vector(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.vector(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test <- vector(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test <- vector(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25))
my.diabet.test <- as.matrix(c(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25)))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
colnames(my.diabet.test) <- colnames(diabet.train)
diabet.train <- diabet.train[, -9]
colnames(my.diabet.test) <- colnames(diabet.train)
diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction
my.diabet.test.prediction
diabet.test.prediction <- knn(train = diabet.train,
test = diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
my.diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
colnames(my.diabet.test) <- colnames(diabet.train)
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- t(list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test <- as.data.frame(my.diabet.test)
View(my.diabet.test)
my.diabet.test <- t(as.data.frame(my.diabet.test))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- t(as.data.frame(my.diabet.test))
my.diabet.test <- list(list((2, 76, 70, 23, 67, 34.7, 0.23, 22),
list(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- list(list(2, 76, 70, 23, 67, 34.7, 0.23, 22),
list(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- c(list(2, 76, 70, 23, 67, 34.7, 0.23, 22),
list(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
View(my.diabet.test)
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- t(list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- t(data.frame(my.diabet.test))
my.diabet.test <- as.data.frame(t(data.frame(my.diabet.test)))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(data.frame(my.diabet.test)))
my.diabet.test <- matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.matrix(list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test <- as.data.frame(my.diabet.test)
View(my.diabet.test)
my.diabet.test <- matrix(nrow = 2, ncol = 8)
my.diabet.test[1:2,] <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test[1:2,] <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- matrix(nrow = 2, ncol = 8)
my.diabet.test[1,] <- c(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test[2,] <- c(0, 90, 88, 26, 80, 31.4, 0.63, 25)
View(my.diabet.test)
my.diabet.test <- as.data.frame(my.diabet.test)
colnames(my.diabet.test) <- colnames(diabet.train)
my.diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction
diabet.test.prediction
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
data.voice$label <- factor(data.voice$label,
levels = c("male", "female"),
labels = c(0, 1))
cor(data.voice)
voice.size <- length(data.voice[, 1])
typeof(data.voice$meanfreq)
plot(data.voice$meanfreq, data.voice$label, type="n", main="test")
voice.size <- length(data.voice[, 1])
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$meanfreq[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$sd, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$sd[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$dfrange, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$dfrange[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$modindx, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$modindx[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$mode, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$mode[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$sfm, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$sfm[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$kurt, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$kurt[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$sp.ent, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$sp.ent[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$IQR, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$IQR[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$centroid, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$centroid[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$skew, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$centroid[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$skew, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$skew[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$meanfun, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$meanfun[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$maxfun, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$maxfun[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
voice.regression <- glm(formula = data.voice$label ~ data.voice$meanfreq,
family = binomial,
data = data.voice)
voice.regression
th <- coef(voice.regression)
th
plot(data.voice$maxfun, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$maxfun[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$meanfreq, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$meanfreq[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
fexp <- function(x) exp(th[1] + th[2] * x) / (1 + exp(th[1] + th[2] * x))
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
data.voice$label
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
fexp <- function(x) 1 / (1 + exp(-(th[1] + th[2] * x)))
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
fexp <- function(x){ return 1 / (1 + exp(-(th[1] + th[2] * x)))}
fexp <- function(x){ return(1 / (1 + exp(-(th[1] + th[2] * x))))}
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
th[1]
th[1]
fexp <- function(x){ return(1 / (1 + exp(-(th[1] + th[2] * x))))}
View(fexp)
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
data.voice$label
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
View(data.voice)
data.voice$label <- as.numeric(factor(data.voice$label,
levels = c("male", "female"),
labels = c(0, 1)))
voice.size <- length(data.voice[, 1])
plot(data.voice$meanfreq, data.voice$label, type="n", main="test")
data.voice$label <- as.numeric(factor(data.voice$label,
levels = c("female", "male"),
labels = c(0, 1)))
data.voice$label <- as.numeric(factor(data.voice$label,
levels = c("male", "female"),
labels = c(1, 0)))
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
data.voice$label <- as.numeric(factor(data.voice$label,
levels = c("male", "female"),
labels = c(1, 0)))
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$factor)
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$factor)
levels(data.voice$flabel)
levels(data.voice$label)
levels(data.voice$label) <- c(0, 1)
levels(data.voice$label)
voice.size <- length(data.voice[, 1])
plot(data.voice$meanfreq, data.voice$label, type="n", main="test")
plot(data.voice$meanfreq, data.voice$label - 1, type="n", main="test")
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$label) <- c(0, 1)
data.voice$label <- as.numeric(levels(data.voice$label)[data.voice$label])
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$label)
c(0, 1)
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$label) <- list(0 = "female", 1 = "male")
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$label)
levels(data.voice$label)[1]
levels(data.voice$label)[1] <- 0
levels(data.voice$label)[2] <- 1
levels(data.voice$label)
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$label)[1] <- "0"
levels(data.voice$label)[2] <- "1"
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
data.voice <- read.csv("data/voice.csv",
header = TRUE,
sep = ",")
levels(data.voice$label) <- c(0, 1)
data.voice$label <- as.numeric(levels(data.voice$label)[data.voice$label])
voice.size <- length(data.voice[, 1])
plot(data.voice$meanfreq, data.voice$label - 1, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$meanfreq[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
plot(data.voice$meanfreq, data.voice$label, type="n", main="test")
for (i in 1:voice.size)
{
colour <- ifelse(data.voice$label[i] == 1,
"blue",
"red")
points(data.voice$meanfreq[i],
data.voice$label[i],
type="p",
pch=16,
col=colour,
add="TRUE")
}
voice.regression <- glm(formula = data.voice$label ~ data.voice$meanfreq,
family = binomial,
data = data.voice)
th <- coef(voice.regression)
fexp <- function(x){ return(1 / (1 + exp(-(th[1] + th[2] * x))))}
curve(fexp(x), 0, 0.3, col="Orange", lwd=3, add=TRUE)
th
