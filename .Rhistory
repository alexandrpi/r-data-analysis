}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
X1.gym <- matrix(nrow = n, ncol = f + 1)
for (k in 1:(f + 1)) {
print(k)
if (k == 1) {
X1.gym[, k] <- runif(n, 1:1)
}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
edit(X1)
edit(X1.gym)
T <- t(X1.gym) %*% X1.gym
library(MASS)
T.inverse <- ginv(T)
View(`T`)
th <- T.inverse%*%t(X1.gym)%*%Y.gym
Y.gym <- matrix.gym[, 1]
th <- T.inverse%*%t(X1.gym)%*%Y.gym
th <- T.inverse%*%t(X1.gym)%*%Y.gym[, 1]
th <- (T.inverse%*%t(X1.gym)%*%Y.gym)[, 1]
matrix.gym <- matrix.gym[indices.train,]
X.gym <- matrix.gym[, 2:f + 1]
Y.gym <- matrix.gym[, 1]
X1.gym <- matrix(nrow = n, ncol = f + 1)
for (k in 1:(f + 1)) {
print(k)
if (k == 1) {
X1.gym[, k] <- runif(n, 1:1)
}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
T <- t(X1.gym) %*% X1.gym
library(MASS)
T.inverse <- ginv(T)
th <- (T.inverse%*%t(X1.gym)%*%Y.gym)[, 1]
matrix.gym <- matrix(nrow = 0, ncol = f + 1)
matrix.gym <- read.table("data_gym.csv",
header = TRUE,
sep = ",")
matrix.gym[, 2] <- mapply(function(timestamp) timestamp / 3600, matrix.gym[, 2])
matrix.gym.train <- matrix.gym[indices.train,]
n <- length(matrix.gym.train[,1])
X.gym <- matrix.gym.train[, 2:f + 1]
Y.gym <- matrix.gym.train[, 1]
X1.gym <- matrix(nrow = n, ncol = f + 1)
for (k in 1:(f + 1)) {
print(k)
if (k == 1) {
X1.gym[, k] <- runif(n, 1:1)
}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
T <- t(X1.gym) %*% X1.gym
library(MASS)
T.inverse <- ginv(T)
th <- (T.inverse%*%t(X1.gym)%*%Y.gym)[, 1]
X.gym <- matrix.gym.train[, 2:(f + 1)]
Y.gym <- matrix.gym.train[, 1]
X1.gym <- matrix(nrow = n, ncol = f + 1)
for (k in 1:(f + 1)) {
print(k)
if (k == 1) {
X1.gym[, k] <- runif(n, 1:1)
}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
T <- t(X1.gym) %*% X1.gym
library(MASS)
T.inverse <- ginv(T)
th <- (T.inverse%*%t(X1.gym)%*%Y.gym)[, 1]
prognosis <- th%*%t(matrix.gym[indices.test,][,2:(f + 1)])
prognosis <- th%*%t(matrix.gym[indices.test, 2:(f + 1)])
f <- 7
matrix.gym <- matrix(nrow = 0, ncol = f + 1)
matrix.gym <- read.table("data_gym.csv",
header = TRUE,
sep = ",")
matrix.gym[, 2] <- mapply(function(timestamp) timestamp / 3600, matrix.gym[, 2])
n <- length(matrix.gym[,1])
# первый столбец отвечает за переменную отклика, возьмем только факторные переменные
X.gym <- matrix.gym[, 2:(f + 1)]
Y.gym <- matrix.gym[, 1]
X1.gym <- matrix(nrow = n, ncol = f + 1)
for (k in 1:(f + 1)) {
print(k)
if (k == 1) {
X1.gym[, k] <- runif(n, 1:1)
}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
prognosis <- th%*%t(X1.gym[indices.test,])
plot(prognosis[70:370], Y[indices.test,][70:370], col="#B8B42D", type="p",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
plot(prognosis[70:370], Y.gym[indices.test,][70:370], col="#B8B42D", type="p",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
plot(prognosis[70:370], Y.gym[indices.test][70:370], col="#B8B42D", type="p",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
plot(prognosis[70:370], Y.gym[indices.test][70:370], col="#B8B42D", type="l",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
plot(prognosis[70:370], Y.gym[indices.test][70:370], col="#B8B42D", type="p",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
cor(gym.data)
crowd.mul.regression <- lm(number_people ~ timestamp +
is_weekend +
apparent_temperature +
is_start_of_semester,
gym.data.train)
summary(crowd.mul.regression)
crowd.predict <- predict(crowd.mul.regression, gym.data.test)
crowd.true <- gym.data.test[,1]
plot(crowd.predict[70:370], crowd.true[70:370], col="#B8B42D", type="p",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
f <- 4
matrix.gym <- matrix(nrow = 0, ncol = f + 1)
emp <- read.table("data_gym.csv",
header = TRUE,
sep = ",")
temp[, 2] <- mapply(function(timestamp) timestamp / 3600, matrix.gym[, 2])
matrix.gym <- temp[, c(1, 2, 4, 6, 8)]
n <- length(matrix.gym[,1])
X.gym <- matrix.gym[, 2:(f + 1)]
Y.gym <- matrix.gym[, 1]
X1.gym <- matrix(nrow = n, ncol = f + 1)
for (k in 1:(f + 1)) {
print(k)
if (k == 1) {
X1.gym[, k] <- runif(n, 1:1)
}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
X1.gym.train <- X1.gym[indices.train,]
matrix.gym <- matrix(nrow = 0, ncol = f + 1)
temp <- read.table("data_gym.csv",
header = TRUE,
sep = ",")
temp[, 2] <- mapply(function(timestamp) timestamp / 3600, temp[, 2])
matrix.gym <- temp[, c(1, 2, 4, 6, 8)]
n <- length(matrix.gym[,1])
X.gym <- matrix.gym[, 2:(f + 1)]
Y.gym <- matrix.gym[, 1]
X1.gym <- matrix(nrow = n, ncol = f + 1)
for (k in 1:(f + 1)) {
print(k)
if (k == 1) {
X1.gym[, k] <- runif(n, 1:1)
}
else {
X1.gym[, k] <- X.gym[, k - 1]
}
}
X1.gym.train <- X1.gym[indices.train,]
T <- t(X1.gym.train) %*% X1.gym.train
library(MASS)
T.inverse <- ginv(T)
th <- (T.inverse%*%t(X1.gym.train)%*%Y.gym[indices.train,])[, 1]
prognosis <- th%*%t(X1.gym[indices.test,])
th <- (T.inverse%*%t(X1.gym.train)%*%Y.gym[indices.train,])[, 1]
th <- (T.inverse%*%t(X1.gym.train)%*%Y.gym[indices.train])[, 1]
prognosis <- th%*%t(X1.gym[indices.test,])
plot(prognosis[70:370], Y.gym[indices.test][70:370], col="#B8B42D", type="p",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
cor(gym.data)
View(cor(gym.data))
write.csv((cor(gym.data), file = "gym_data_corr.csv")
write.csv(cor(gym.data), file = "gym_data_corr.csv")
th
crowd.mul.regression
summary(crowd.mul.regression)
length(indices.test)
length(indices.train)
plot(crowd.predict[70:370], crowd.true[70:370], col="#B8B42D", type="p",
pch=20,
xlab="Предсказанные значения",
ylab="Настоящие значения")
crowd.mul.regression <- lm(number_people ~ timestamp +
is_weekend +
apparent_temperature + is_holiday +
is_start_of_semester,
gym.data.train)
summary(crowd.mul.regression)
data.diabet <- read.csv("data/diabets.csv",
header = TRUE,
sep = ",")
getwd()
data.diabet <- read.csv("/data/diabets.csv",
header = TRUE,
sep = ",")
data.diabet <- read.csv("data//diabets.csv",
header = TRUE,
sep = ",")
data.diabet <- read.csv("data\diabets.csv",
header = TRUE,
sep = ",")
data.diabet <- read.csv("data\\diabets.csv",
header = TRUE,
sep = ",")
getwd()
data.diabet <- read.csv("/data/diabets.csv",
header = TRUE,
sep = ",")
getwd)(
()
getwd()
data.diabet <- read.csv("data/diabets.csv",
header = TRUE,
sep = ",")
data.diabet <- read.csv("data/diabetes.csv",
header = TRUE,
sep = ",")
remove()
remove(almost)
remove(envir = globalenv())
data.diabet <- read.csv("data/diabetes.csv",
header = TRUE,
sep = ",")
View(data.diabet)
na.fail(data.diabet)
train_cnt <- 567
test_cnt <- lentgth(data.diabet[, 1]) - train_cnt
test_cnt <- length(data.diabet[, 1]) - train_cnt
prop.table(data.diabet)
prop.table(data.diabet$Outcome)
table(data.diabet$Outcome)
prop.table(table(data.diabet$Outcome))
round(prop.table(table(data.diabet$Outcome)), digits = 1)
round(prop.table(table(data.diabet$Outcome)), digits = 2)
runif()
runif(n=1)
data.diabet.train <- sample(data.diabet, train_cnt)
length(data.diabet)
data.diabet.train <- sample(data.diabet[], train_cnt)
length(data.diabet[,])
length(data.diabet[])
n <- length(data.diabet[, 1])
data_size <- length(data.diabet[, 1])
data.size <- length(data.diabet[, 1])
train.cnt <- 567
test.cnt <- data.size - train.cnt
round(prop.table(table(data.diabet$Outcome)), digits = 2)
data.diabet.train <- data.diabet[sample(1:data.size, train.cnt),]
round(prop.table(table(data.diabet.train$Outcome)), digits = 2)
diabet.train <- data.diabet[sample(1:data.size, train.cnt),]
round(prop.table(table(data.diabet.train$Outcome)), digits = 2)
diabet.train.labels <- diabet.train[,9]
train.indices <- sample(1:data.size, train.cnt)
diabet.train <- data.diabet[train.indices,]
round(prop.table(table(data.diabet.train$Outcome)), digits = 2)
round(prop.table(table(diabet.train$Outcome)), digits = 2)
test.indeces <- 1:data.size - train.indices
test.indeces <- setdiff(1:data.size, train.indices)
test.indices <- setdiff(1:data.size, train.indices)
train.indices
install.packages("class")
diabet.test <- data.diabet[train.indices, -9]
diabet.train <- diabet.train[,-9]
diabet.test <- data.diabet[test.indices, -9]
diabet.test <- data.diabet[test.indices,]
diabet.test.labels <- diabet.test[,9]
diabet.test <- data.diabet[, -9]
library("class")
train.size <- 567
test.size <- data.size - train.size
diabet.test.prediction <- knn(train = diabet.train,
test = diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
library("gmodels")
install.packages("gmodels")
library("gmodels")
diabet.test.prediction <- knn(train = diabet.train,
test = diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
library("gmodels")
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
CrossTable(diabet.test.labels, as.numeric(diabet.test.prediction), prop.chisq = FALSE)
length(diabet.test.prediction)
data.diabet <- read.csv("data/diabetes.csv",
header = TRUE,
sep = ",")
data.size <- length(data.diabet[, 1])
data.diabet <- read.csv("data/diabetes.csv",
header = TRUE,
sep = ",")
data.size <- length(data.diabet[, 1])
train.size <- 567
test.size <- data.size - train.size
round(prop.table(table(data.diabet$Outcome)), digits = 2)
train.indices <- sample(1:data.size, train.size)
test.indices <- setdiff(1:data.size, train.indices)
diabet.train <- data.diabet[train.indices,]
round(prop.table(table(diabet.train$Outcome)), digits = 2)
diabet.train.labels <- diabet.train[, 9]
diabet.train <- diabet.train[, -9]
diabet.test <- data.diabet[test.indices,]
diabet.test.labels <- diabet.test[, 9]
diabet.test <- diabet.test[, -9]
library("class")
diabet.test.prediction <- knn(train = diabet.train,
test = diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
library("gmodels")
length(diabet.test.prediction)
CrossTable(diabet.test.labels, as.numeric(diabet.test.prediction), prop.chisq = FALSE)
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
data.diabet <- data.diabet[, 2:8 > 0]
data.diabet <- data.diabet[2:8 > 0]
data.diabet <- data.diabet[, 2:8 < 0]
data.diabet <- read.csv("data/diabetes.csv",
header = TRUE,
sep = ",")
data.diabet <- data.diabet[2:8 > 0]
data.diabet <- data.diabet[data.diabet$Glucose > 0 &
data.diabet$BloodPressure > 0 &
data.diabet$SkinThickness > 0 &
data.diabet$Insulin > 0 &
data.diabet$BMI > 0 &]
data.diabet <- data.diabet[data.diabet$Glucose > 0 &
data.diabet$BloodPressure > 0 &
data.diabet$SkinThickness > 0 &
data.diabet$Insulin > 0 &
data.diabet$BMI > 0]
data.diabet <- data.diabet[data.diabet$Glucose > 0 &
data.diabet$BloodPressure > 0 &
data.diabet$SkinThickness > 0 &
data.diabet$Insulin > 0 &
data.diabet$BMI > 0,]
data.size <- length(data.diabet[, 1])
train.size <- 317
test.size <- data.size - train.size
round(prop.table(table(data.diabet$Outcome)), digits = 2)
train.indices <- sample(1:data.size, train.size)
test.indices <- setdiff(1:data.size, train.indices)
diabet.train <- data.diabet[train.indices,]
round(prop.table(table(diabet.train$Outcome)), digits = 2)
diabet.train.labels <- diabet.train[, 9]
diabet.train <- diabet.train[, -9]
diabet.test <- data.diabet[test.indices,]
diabet.test.labels <- diabet.test[, 9]
diabet.test <- diabet.test[, -9]
library("class")
diabet.test.prediction <- knn(train = diabet.train,
test = diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
library("gmodels")
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
cor(data.diabet[, c(2, 5)])
round(prop.table(table(data.diabet$Outcome)), digits = 2)
round(prop.table(table(diabet.train$Outcome)), digits = 2)
diabet.train <- data.diabet[train.indices,]
round(prop.table(table(data.diabet$Outcome)), digits = 2)
round(prop.table(table(diabet.train$Outcome)), digits = 2)
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
my.diabet.test <- as.data.frame()
my.diabet.test <- as.data.frame(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(as.numeric(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(c(as.numeric(2, 76, 70, 23, 67, 34.7, 0.23, 22)))
my.diabet.test <- as.numeric(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test <- c(2, 76, 70, 23, 67, 34.7, 0.23, 22)
as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.numeric(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.vector(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.vector(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test <- vector(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test <- vector(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25))
my.diabet.test <- as.matrix(c(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25)))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.33, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
colnames(my.diabet.test) <- colnames(diabet.train)
diabet.train <- diabet.train[, -9]
colnames(my.diabet.test) <- colnames(diabet.train)
diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction
my.diabet.test.prediction
diabet.test.prediction <- knn(train = diabet.train,
test = diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
CrossTable(diabet.test.labels, diabet.test.prediction, prop.chisq = FALSE)
my.diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
colnames(my.diabet.test) <- colnames(diabet.train)
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(my.diabet.test))
my.diabet.test <- t(list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test <- as.data.frame(my.diabet.test)
View(my.diabet.test)
my.diabet.test <- t(as.data.frame(my.diabet.test))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- t(as.data.frame(my.diabet.test))
my.diabet.test <- list(list((2, 76, 70, 23, 67, 34.7, 0.23, 22),
list(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- list(list(2, 76, 70, 23, 67, 34.7, 0.23, 22),
list(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- c(list(2, 76, 70, 23, 67, 34.7, 0.23, 22),
list(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- as.data.frame(t(my.diabet.test))
View(my.diabet.test)
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- t(list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test <- as.data.frame(my.diabet.test)
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- t(data.frame(my.diabet.test))
my.diabet.test <- as.data.frame(t(data.frame(my.diabet.test)))
my.diabet.test <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.data.frame(t(data.frame(my.diabet.test)))
my.diabet.test <- matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.matrix(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- as.matrix(list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test <- as.data.frame(my.diabet.test)
View(my.diabet.test)
my.diabet.test <- matrix(nrow = 2, ncol = 8)
my.diabet.test[1:2,] <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25)))
my.diabet.test[1:2,] <- list(c(2, 76, 70, 23, 67, 34.7, 0.23, 22),
c(0, 90, 88, 26, 80, 31.4, 0.63, 25))
my.diabet.test <- matrix(nrow = 2, ncol = 8)
my.diabet.test[1,] <- c(2, 76, 70, 23, 67, 34.7, 0.23, 22)
my.diabet.test[2,] <- c(0, 90, 88, 26, 80, 31.4, 0.63, 25)
View(my.diabet.test)
my.diabet.test <- as.data.frame(my.diabet.test)
colnames(my.diabet.test) <- colnames(diabet.train)
my.diabet.test.prediction <- knn(train = diabet.train,
test = my.diabet.test,
cl = diabet.train.labels,
k = round(sqrt(train.size)))
my.diabet.test.prediction
diabet.test.prediction
